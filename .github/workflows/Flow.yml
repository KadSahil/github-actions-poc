name: GitHub-POC-Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment"
        required: true
        type: choice
        options:
          - DEV
          - UAT
          - PROD
      java:
        description: "Java Version"
        required: true
        type: choice
        options:
          - '8'
          - '17'
          
jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/${{ inputs.environment }}/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java }}
    - name: Test with Maven
      run: mvn clean test
    - name: Upload MUnit reports
      uses: actions/upload-artifact@v4
      with:
        name: munit-test-reports
        path: target/site/munit/coverage

  build:
    needs: test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/${{ inputs.environment }}/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java }}
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: target/*.jar
          
  deploy-cloudhub:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/${{ inputs.environment }}/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Download the JAR File
      uses: actions/download-artifact@v4
      with:
        name: artifacts
    - name: Deploy to ${{ inputs.environment }}
      env:
        connectedAppId: if [ "${{ inputs.environment }}" == "DEV" ]; ${{ secrets.dev_connected_app_id }}; elif ["${{ inputs.environment }}" == "UAT"]; ${{ secrets.uat_connected_app_id }}; else ${{ secrets.prod_connected_app_id }}; fi
        connectedAppSecret: if [ "${{ inputs.environment }}" == "DEV" ]; ${{ secrets.dev_connected_app_secret }}; elif ["${{ inputs.environment }}" == "UAT"]; ${{ secrets.uat_connected_app_secret }}; else ${{ secrets.prod_connected_app_secret }}; fi
        grantType: ${{ secrets.grant_type }}
      run: mvn deploy -DskipTests -DmuleDeploy -DClientId="$connectedAppId" -DClientSecret="$connectedAppSecret" -DGrantType="$grantType" -Denvironment="${{ inputs.environment }}" -D"application.name"=if [ "${{ inputs.environment }}" == "PROD" ] then echo "github-actions-poc" else echo "github-actions-poc-${{ inputs.environment }}" fi
